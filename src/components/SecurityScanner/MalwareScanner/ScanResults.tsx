
import React from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { CardHeader, CardContent, CardTitle } from '@/components/ui/card';
import { CheckCircle, AlertTriangle } from 'lucide-react';
import { MalwareScanResult } from './useMalwareScan';

interface ScanResultsProps {
  scanResults: MalwareScanResult;
  onScanAnother: () => void;
}

const ScanResults = ({ scanResults, onScanAnother }: ScanResultsProps) => {
  if (!scanResults) return null;
  
  const isSafe = scanResults.clean;
  const hasDetections = scanResults.detections && scanResults.detections.length > 0;
  const hasSeverity = hasDetections && scanResults.detections.some(d => d.severity === 'high');
  
  // Create stats for display
  const malicious = hasDetections ? scanResults.detections.filter(d => d.severity === 'high').length : 0;
  const suspicious = hasDetections ? scanResults.detections.filter(d => d.severity === 'medium').length : 0;
  const harmless = isSafe ? 1 : 0;
  const undetected = isSafe ? 0 : 0;
  
  return (
    <div className="space-y-4">
      <div className={`p-4 rounded-lg flex items-start gap-3 ${
        isSafe ? 'bg-green-500/10' : suspicious > 0 ? 'bg-yellow-500/10' : 'bg-cyber-alert/10'
      }`}>
        {isSafe ? (
          <CheckCircle className="h-6 w-6 text-green-500 flex-shrink-0" />
        ) : suspicious > 0 && malicious === 0 ? (
          <AlertTriangle className="h-6 w-6 text-yellow-500 flex-shrink-0" />
        ) : (
          <AlertTriangle className="h-6 w-6 text-cyber-alert flex-shrink-0" />
        )}
        <div>
          <h3 className={`text-lg font-medium ${
            isSafe ? 'text-green-500' : suspicious > 0 && malicious === 0 ? 'text-yellow-500' : 'text-cyber-alert'
          }`}>
            {isSafe ? 'URL appears to be safe' : 
             suspicious > 0 && malicious === 0 ? 'URL might be suspicious' : 
             'URL detected as malicious'}
          </h3>
          <p className="text-gray-400">
            {isSafe ? 'No security vendors detected issues with this URL.' : 
             suspicious > 0 && malicious === 0 ? 'Some security vendors flagged this URL as suspicious.' : 
             'Multiple security vendors flagged this URL as malicious.'}
          </p>
        </div>
      </div>
      
      <div className="grid grid-cols-2 sm:grid-cols-4 gap-4">
        <StatsCard title="Malicious" value={malicious} color="text-cyber-alert" />
        <StatsCard title="Suspicious" value={suspicious} color="text-yellow-500" />
        <StatsCard title="Harmless" value={harmless} color="text-green-500" />
        <StatsCard title="Undetected" value={undetected} color="text-gray-400" />
      </div>
      
      <Button 
        variant="outline" 
        className="w-full border-cyber-purple/30 hover:bg-cyber-purple/10" 
        onClick={onScanAnother}
      >
        Scan Another URL
      </Button>
    </div>
  );
};

interface StatsCardProps {
  title: string;
  value: number;
  color: string;
}

const StatsCard = ({ title, value, color }: StatsCardProps) => (
  <Card className="bg-black/20 border-cyber-purple/20">
    <CardHeader className="p-4 pb-2">
      <CardTitle className="text-sm text-gray-400">{title}</CardTitle>
    </CardHeader>
    <CardContent className="p-4 pt-0">
      <p className={`text-xl font-bold ${color}`}>{value}</p>
    </CardContent>
  </Card>
);

export default ScanResults;
